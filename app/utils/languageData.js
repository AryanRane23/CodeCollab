export const fileNames = {
  javascript: "index.js",
  python: "main.py",
  java: "Main.java",
  c: "main.c", // C
  cpp: "main.cpp", // C++
  cs: "Program.cs", // C#
  typescript: "index.ts",
  go: "main.go",
  php: "index.php",
  ruby: "main.rb",
  swift: "main.swift",
  kotlin: "Main.kt",
  rust: "main.rs",
  r: "main.r",
  perl: "main.pl",
  bash: "main.sh",
  dart: "main.dart",
  scala: "Main.scala",
  sql: "main.sql",
  html: "index.html",
  css: "styles.css",
  json: "data.json",
  xml: "data.xml",
  markdown: "README.md",
  yaml: "config.yaml",
};

export const starterCodes = {
  javascript: `console.log("Hello, JavaScript!");`,
  python: `print("Hello, Python!")`,
  java: `public class Main {\n  public static void main(String[] args) {\n    System.out.println("Hello, Java!");\n  }\n}`,
  c: `#include <stdio.h>\nint main() {\n  printf("Hello, C!\\n");\n  return 0;\n}`,
  cpp: `#include<iostream>\nusing namespace std;\nint main() {\n  cout << "Hello, C++!" << endl;\n  return 0;\n}`,
  cs: `using System;\nclass Program {\n  static void Main() {\n    Console.WriteLine("Hello, C#!");\n  }\n}`,
  typescript: `console.log("Hello, TypeScript!");`,
  go: `package main\n\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello, Go!")\n}`,
  php: `<?php\necho "Hello, PHP!";`,
  ruby: `puts "Hello, Ruby!"`,
  swift: `print("Hello, Swift!")`,
  kotlin: `fun main() {\n  println("Hello, Kotlin!")\n}`,
  rust: `fn main() {\n  println!("Hello, Rust!");\n}`,
  r: `print("Hello, R!")`,
  perl: `print "Hello, Perl!\\n";`,
  bash: `echo "Hello, Bash!"`,
  dart: `void main() {\n  print("Hello, Dart!");\n}`,
  scala: `object Main {\n  def main(args: Array[String]): Unit = {\n    println("Hello, Scala!")\n  }\n}`,
  sql: `SELECT "Hello, SQL!" AS message;`,
  html: `<!DOCTYPE html>\n<html>\n<head><title>Hello</title></head>\n<body>\n  <h1>Hello, HTML!</h1>\n</body>\n</html>`,
  css: `body {\n  background-color: #f0f0f0;\n  color: #333;\n}`,
  json: `{\n  "message": "Hello, JSON!"\n}`,
  xml: `<message>Hello, XML!</message>`,
  markdown: `# README.md\n\nHello, Markdown!`,
  yaml: `message: "Hello, YAML!"`,
};

